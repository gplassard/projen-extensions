// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RustProject with default settings synthesizes 1`] = `
{
  ".github/workflows/pull-request-lint.yml": "# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

name: pull-request-lint
on:
  pull_request_target:
    types:
      - labeled
      - opened
      - synchronize
      - reopened
      - ready_for_review
      - edited
jobs:
  validate:
    name: Validate PR title
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: amannn/action-semantic-pull-request@v5.0.2
        env:
          GITHUB_TOKEN: \${{ secrets.GITHUB_TOKEN }}
        with:
          types: |-
            feat
            fix
            chore
            refactor
            build
            docs
            ci
            perf
            style
            test
          requireScope: true
          githubBaseUrl: \${{ github.api_url }}
",
  ".github/workflows/rust-build.yml": "# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

name: ci
on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - edited
      - synchronize
      - reopened
    branches:
      - main
env:
  CARGO_TERM_COLOR: always
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Build
        run: cargo build --release
      - name: Tests
        run: cargo test --verbose
",
  ".github/workflows/rust-lint.yml": "# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

name: lint
on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - edited
      - synchronize
      - reopened
    branches:
      - main
env:
  RUSTFLAGS: -Dwarnings
jobs:
  lint-rust:
    runs-on: ubuntu-latest
    steps:
      - name: Generate token
        id: generate-token
        uses: tibdex/github-app-token@021a2405c7f990db57f5eae5397423dcc554159c
        with:
          app_id: \${{ secrets.PROJEN_APP_ID }}
          private_key: \${{ secrets.PROJEN_APP_PRIVATE_KEY }}
          permissions: '{"pull_requests":"write","contents":"write"}'
      - uses: actions/checkout@v3
        with:
          ref: \${{ github.event.pull_request.head.ref }}
          token: \${{ steps.generate-token.outputs.token }}
      - name: Run Clippy
        run: cargo clippy --all-targets --all-features
      - name: Format Code
        run: cargo fmt
      - name: Commit changes
        uses: EndBug/add-and-commit@v9
        with:
          author_name: github-actions
          author_email: github-actions@github.com
          message: "style(formatting): self mutation"
",
  ".github/workflows/rust-release.yml": "# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

name: release
on:
  push:
    tags:
      - v*
env:
  CARGO_TERM_COLOR: always
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Build
        run: cargo build --release
      - name: Tests
        run: cargo test --verbose
      - name: Create release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: \${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: \${{ github.ref }}
          release_name: Release \${{ github.ref }}
          body: Release \${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload release assets
        id: upload-release-assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: \${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: \${{ steps.create_release.outputs.upload_url }}
          asset_path: target/release/test-project
          asset_name: test-project
          asset_content_type: application/zip
",
  ".gitignore": "# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".
node_modules/
!/.gitattributes
!/.projen/tasks.json
!/.projen/deps.json
!/.projen/files.json
.idea
*.iml
.vscode
.DS_Store
!/Cargo.toml
target
!/.github/workflows/rust-release.yml
!/.github/workflows/rust-build.yml
!/.github/workflows/rust-lint.yml
!/.github/workflows/pull-request-lint.yml
",
  ".projen/files.json": {
    "//": "~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".",
    "files": [
      ".gitattributes",
      ".github/workflows/pull-request-lint.yml",
      ".github/workflows/rust-build.yml",
      ".github/workflows/rust-lint.yml",
      ".github/workflows/rust-release.yml",
      ".gitignore",
      ".projen/deps.json",
      ".projen/files.json",
      ".projen/tasks.json",
      "Cargo.toml",
    ],
  },
  ".projen/tasks.json": {
    "//": "~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".",
    "tasks": {
      "compile": {
        "description": "Only compile",
        "name": "compile",
      },
      "default": {
        "description": "Synthesize project files",
        "name": "default",
        "steps": [
          {
            "exec": "node .projenrc.js",
          },
        ],
      },
      "package": {
        "description": "Creates the distribution package",
        "name": "package",
      },
      "post-compile": {
        "description": "Runs after successful compilation",
        "name": "post-compile",
      },
      "pre-compile": {
        "description": "Prepare the project for compilation",
        "name": "pre-compile",
      },
      "test": {
        "description": "Run tests",
        "name": "test",
      },
    },
  },
  "Cargo.toml": "# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

dependencies = { }

[package]
authors = [ "user@mail.com" ]
edition = "2021"
version = "1.0.0"
name = "test-project"
",
}
`;
