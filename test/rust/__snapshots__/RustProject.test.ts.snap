// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RustProject with default settings synthesizes 1`] = `
{
  ".github/workflows/rust-build.yml": "# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

name: ci
on:
  push:
    branches:
      - master
  pull_request:
    types:
      - opened
      - edited
      - synchronize
      - reopened
    branches:
      - master
env:
  CARGO_TERM_COLOR: always
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Build
        run: cargo build --release
      - name: Tests
        run: cargo test --verbose
",
  ".github/workflows/rust-release.yml": "# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

name: release
on:
  push:
    tags:
      - v*
env:
  CARGO_TERM_COLOR: always
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Build
        run: cargo build --release
      - name: Tests
        run: cargo test --verbose
      - name: Create release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: \${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: \${{ github.ref }}
          release_name: Release \${{ github.ref }}
          body: Release \${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload release assets
        id: upload-release-assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: \${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: \${{ steps.create_release.outputs.upload_url }}
          asset_path: target/release/test-project
          asset_name: test-project
          asset_content_type: application/zip
",
  ".gitignore": "# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".
node_modules/
!/.gitattributes
!/.projen/tasks.json
!/.projen/deps.json
!/.projen/files.json
target
!/cargo.toml
!/.github/workflows/rust-release.yml
!/.github/workflows/rust-build.yml
",
  ".projen/files.json": {
    "//": "~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".",
    "files": [
      ".gitattributes",
      ".github/workflows/rust-build.yml",
      ".github/workflows/rust-release.yml",
      ".gitignore",
      ".projen/deps.json",
      ".projen/files.json",
      ".projen/tasks.json",
      "cargo.toml",
    ],
  },
  ".projen/tasks.json": {
    "//": "~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".",
    "tasks": {
      "compile": {
        "description": "Only compile",
        "name": "compile",
      },
      "default": {
        "description": "Synthesize project files",
        "name": "default",
        "steps": [
          {
            "exec": "node .projenrc.js",
          },
        ],
      },
      "package": {
        "description": "Creates the distribution package",
        "name": "package",
      },
      "post-compile": {
        "description": "Runs after successful compilation",
        "name": "post-compile",
      },
      "pre-compile": {
        "description": "Prepare the project for compilation",
        "name": "pre-compile",
      },
      "test": {
        "description": "Run tests",
        "name": "test",
      },
    },
  },
  "cargo.toml": "# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

dependencies = { }

[package]
authors = [ "user@mail.com" ]
edition = "2021"
version = "1.0.0"
name = "test-project"
",
}
`;
