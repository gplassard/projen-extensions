// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RustProject with default settings synthesizes 1`] = `
{
  ".github/workflows/projen-synth.yml": "# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

name: Projen-Synth
on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - edited
      - synchronize
      - reopened
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    outputs:
      self_mutation_happened: \${{ steps.self_mutation.outputs.self_mutation_happened }}
    env:
      CI: "true"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: "9"
      - uses: actions/setup-node@v4
        with:
          node-version: 20.15.0
          registry-url: https://npm.pkg.github.com
          cache: pnpm
      - name: Install dependencies
        env:
          NODE_AUTH_TOKEN: \${{ secrets.GITHUB_TOKEN }}
        run: pnpm i --frozen-lockfile
      - name: Run projen
        run: pnpm run projen
      - name: Find mutations
        id: self_mutation
        run: |-
          git add .
          git diff --staged --patch --exit-code > .repo.patch || echo "self_mutation_happened=true" >> $GITHUB_OUTPUT
        working-directory: ./
      - name: Upload patch
        if: steps.self_mutation.outputs.self_mutation_happened
        uses: actions/upload-artifact@v4
        with:
          name: .repo.patch
          path: .repo.patch
          overwrite: true
      - name: Fail build on mutation
        if: steps.self_mutation.outputs.self_mutation_happened
        run: |-
          echo "::error::Files were changed during build (see build log). If this was triggered from a fork, you will need to update your branch."
          cat .repo.patch
          exit 1
  self-mutation:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: always() && needs.build.outputs.self_mutation_happened && !(github.event.pull_request.head.repo.full_name != github.repository)
    steps:
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a
        with:
          app_id: \${{ secrets.PROJEN_APP_ID }}
          private_key: \${{ secrets.PROJEN_APP_PRIVATE_KEY }}
          permissions: '{"pull_requests":"write","contents":"write","workflows":"write"}'
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: \${{ steps.generate_token.outputs.token }}
          ref: \${{ github.event.pull_request.head.ref }}
          repository: \${{ github.event.pull_request.head.repo.full_name }}
      - name: Download patch
        uses: actions/download-artifact@v4
        with:
          name: .repo.patch
          path: \${{ runner.temp }}
      - name: Apply patch
        run: '[ -s \${{ runner.temp }}/.repo.patch ] && git apply \${{ runner.temp }}/.repo.patch || echo "Empty patch. Skipping."'
      - name: Set git identity
        run: |-
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
      - name: Push changes
        env:
          PULL_REQUEST_REF: \${{ github.event.pull_request.head.ref }}
        run: |-
          git add .
          git commit -s -m "chore: self mutation"
          git push origin HEAD:$PULL_REQUEST_REF
",
  ".github/workflows/pull-request-lint.yml": "# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

name: pull-request-lint
on:
  pull_request_target:
    types:
      - labeled
      - opened
      - synchronize
      - reopened
      - ready_for_review
      - edited
jobs:
  validate:
    name: Validate PR title
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: amannn/action-semantic-pull-request@v5.4.0
        env:
          GITHUB_TOKEN: \${{ secrets.GITHUB_TOKEN }}
        with:
          types: |-
            feat
            fix
            chore
            refactor
            build
            docs
            ci
            perf
            style
            test
          requireScope: true
",
  ".github/workflows/rust-build.yml": "# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

name: ci
on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - edited
      - synchronize
      - reopened
    branches:
      - main
env:
  CARGO_TERM_COLOR: always
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Build
        run: cargo build --release
      - name: Tests
        run: cargo test --verbose
      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: \${{ runner.os }}-cargo-registry-\${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: \${{ runner.os }}-cargo-git-\${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: target
          key: \${{ runner.os }}-cargo-build-target-\${{ hashFiles('**/Cargo.lock') }}
",
  ".github/workflows/rust-lint.yml": "# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

name: lint
on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - edited
      - synchronize
      - reopened
    branches:
      - main
env:
  RUSTFLAGS: -Dwarnings
jobs:
  lint-rust:
    runs-on: ubuntu-latest
    steps:
      - name: Generate token
        id: generate-token
        uses: tibdex/github-app-token@021a2405c7f990db57f5eae5397423dcc554159c
        with:
          app_id: \${{ secrets.PROJEN_APP_ID }}
          private_key: \${{ secrets.PROJEN_APP_PRIVATE_KEY }}
          permissions: '{"pull_requests":"write","contents":"write"}'
      - uses: actions/checkout@v4
        with:
          ref: \${{ github.event.pull_request.head.ref }}
          token: \${{ steps.generate-token.outputs.token }}
      - name: Run Clippy
        run: cargo clippy --all-targets --all-features
      - name: Format Code
        run: cargo fmt
      - name: Commit changes
        uses: EndBug/add-and-commit@v9
        with:
          author_name: github-actions
          author_email: github-actions@github.com
          message: "style(formatting): self mutation"
",
  ".github/workflows/rust-release.yml": "# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

name: release
on:
  push:
    tags:
      - v*
env:
  CARGO_TERM_COLOR: always
jobs:
  build:
    name: Build on \${{ matrix.os }}
    runs-on: \${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macOS-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Build
        run: cargo build --release
      - name: Tests
        run: cargo test --verbose
      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: \${{ runner.os }}-cargo-registry-\${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: \${{ runner.os }}-cargo-git-\${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: target
          key: \${{ runner.os }}-cargo-build-target-\${{ hashFiles('**/Cargo.lock') }}
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: \${{ runner.os}}-binaries
          path: target/release/
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: \${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: \${{ github.ref }}
          release_name: Release \${{ github.ref }}
          body: Release \${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload release assets
        id: upload-release-assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: \${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: \${{ steps.create_release.outputs.upload_url }}
          asset_path: target/release/test-project
          asset_name: test-project
          asset_content_type: application/zip
",
  ".github/workflows/upgrade-nodejs-dependencies.yml": "# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

name: Upgrade-NodeJS-dependencies
on:
  workflow_dispatch: {}
  schedule:
    - cron: 0 0 3 * *
jobs:
  upgrade:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    outputs:
      patch_created: \${{ steps.create_patch.outputs.patch_created }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: "9"
      - uses: actions/setup-node@v4
        with:
          node-version: 20.15.0
          registry-url: https://npm.pkg.github.com
          cache: pnpm
      - name: Install dependencies
        env:
          NODE_AUTH_TOKEN: \${{ secrets.GITHUB_TOKEN }}
        run: pnpm i --frozen-lockfile
      - name: Upgrade dependencies
        env:
          NODE_AUTH_TOKEN: \${{ secrets.GITHUB_TOKEN }}
        run: pnpm dlx npm-check-updates@16 --upgrade --target=latest
      - name: Install dependencies
        env:
          NODE_AUTH_TOKEN: \${{ secrets.GITHUB_TOKEN }}
        run: pnpm i --no-frozen-lockfile
      - name: Run projen
        run: pnpm run projen
      - name: Find mutations
        id: create_patch
        run: |-
          git add .
          git diff --staged --patch --exit-code > .repo.patch || echo "patch_created=true" >> $GITHUB_OUTPUT
        working-directory: ./
      - name: Upload patch
        if: steps.create_patch.outputs.patch_created
        uses: actions/upload-artifact@v4
        with:
          name: .repo.patch
          path: .repo.patch
          overwrite: true
  pr:
    name: Create Pull Request
    needs: upgrade
    runs-on: ubuntu-latest
    permissions:
      contents: read
    if: \${{ needs.upgrade.outputs.patch_created }}
    steps:
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a
        with:
          app_id: \${{ secrets.PROJEN_APP_ID }}
          private_key: \${{ secrets.PROJEN_APP_PRIVATE_KEY }}
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download patch
        uses: actions/download-artifact@v4
        with:
          name: .repo.patch
          path: \${{ runner.temp }}
      - name: Apply patch
        run: '[ -s \${{ runner.temp }}/.repo.patch ] && git apply \${{ runner.temp }}/.repo.patch || echo "Empty patch. Skipping."'
      - name: Set git identity
        run: |-
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
      - name: Create Pull Request
        id: create-pr
        uses: peter-evans/create-pull-request@v6
        with:
          token: \${{ steps.generate_token.outputs.token }}
          commit-message: |-
            chore(deps): upgrade dependencies

            Upgrades project dependencies. See details in [workflow run].

            [Workflow Run]: \${{ github.server_url }}/\${{ github.repository }}/actions/runs/\${{ github.run_id }}

            ------

            *Automatically created by projen via the "upgrade-nodejs-dependencies" workflow*
          branch: github-actions/upgrade-nodejs-dependencies
          title: "chore(deps): upgrade dependencies"
          labels: dependencies
          body: |-
            Upgrades project dependencies. See details in [workflow run].

            [Workflow Run]: \${{ github.server_url }}/\${{ github.repository }}/actions/runs/\${{ github.run_id }}

            ------

            *Automatically created by projen via the "upgrade-nodejs-dependencies" workflow*
          author: github-actions <github-actions@github.com>
          committer: github-actions <github-actions@github.com>
          signoff: true
",
  ".gitignore": "# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".
node_modules/
!/.gitattributes
!/.projen/tasks.json
!/.projen/deps.json
!/.projen/files.json
.idea
*.iml
.vscode
.DS_Store
!/Cargo.toml
target
!/.github/workflows/rust-build.yml
!/.github/workflows/rust-release.yml
!/.github/workflows/rust-lint.yml
!/.github/workflows/pull-request-lint.yml
!/.github/workflows/upgrade-nodejs-dependencies.yml
!/.github/workflows/projen-synth.yml
",
  ".projen/files.json": {
    "//": "~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".",
    "files": [
      ".gitattributes",
      ".github/workflows/projen-synth.yml",
      ".github/workflows/pull-request-lint.yml",
      ".github/workflows/rust-build.yml",
      ".github/workflows/rust-lint.yml",
      ".github/workflows/rust-release.yml",
      ".github/workflows/upgrade-nodejs-dependencies.yml",
      ".gitignore",
      ".projen/deps.json",
      ".projen/files.json",
      ".projen/tasks.json",
      "Cargo.toml",
    ],
  },
  ".projen/tasks.json": {
    "//": "~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".",
    "tasks": {
      "compile": {
        "description": "Only compile",
        "name": "compile",
      },
      "default": {
        "description": "Synthesize project files",
        "name": "default",
        "steps": [
          {
            "exec": "node .projenrc.js",
          },
        ],
      },
      "package": {
        "description": "Creates the distribution package",
        "name": "package",
      },
      "post-compile": {
        "description": "Runs after successful compilation",
        "name": "post-compile",
      },
      "pre-compile": {
        "description": "Prepare the project for compilation",
        "name": "pre-compile",
      },
      "test": {
        "description": "Run tests",
        "name": "test",
      },
    },
  },
  "Cargo.toml": "# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

dependencies = { }

[package]
authors = [ "user@mail.com" ]
edition = "2021"
version = "1.0.0"
name = "test-project"
",
}
`;
