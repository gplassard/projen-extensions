// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RustProject with default settings synthesizes 1`] = `
{
  ".github/workflows/pull-request-lint.yml": "# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

name: pull-request-lint
on:
  pull_request:
    types:
      - opened
      - synchronize
      - edited
jobs:
  validate:
    name: Validate PR title
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: amannn/action-semantic-pull-request@v5.2.0
        env:
          GITHUB_TOKEN: \${{ secrets.GITHUB_TOKEN }}
        with:
          types: |-
            feat
            fix
            chore
          requireScope: false
",
  ".github/workflows/rust-build.yml": "# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

name: ci
on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - edited
      - synchronize
      - reopened
    branches:
      - main
env:
  CARGO_TERM_COLOR: always
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Build
        run: cargo build --release
      - name: Tests
        run: cargo test --verbose
",
  ".github/workflows/rust-release.yml": "# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

name: release
on:
  push:
    tags:
      - v*
env:
  CARGO_TERM_COLOR: always
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Build
        run: cargo build --release
      - name: Tests
        run: cargo test --verbose
      - name: Generate a changelog for current release
        uses: orhun/git-cliff-action@v1
        id: git-cliff
        with:
          config: cliff.toml
          args: -vv --latest --strip header
        env:
          OUTPUT: CHANGES.md
      - name: Set the release body
        id: release
        shell: bash
        run: |-
          r=$(cat \${{ steps.git-cliff.outputs.changelog }})
          r="\${r//'%'/'%25'}"      # Multiline escape sequences for %
          r="\${r//$'\\n'/'%0A'}"   # Multiline escape sequences for '\\n'
          r="\${r//$'\\r'/'%0D'}"   # Multiline escape sequences for '\\r'
          echo "::set-output name=RELEASE_BODY::$r"
      - name: Create release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: \${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: \${{ github.ref }}
          release_name: Release \${{ github.ref }}
          body: \${{ steps.release.outputs.RELEASE_BODY }}
          draft: false
          prerelease: false
      - name: Upload release assets
        id: upload-release-assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: \${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: \${{ steps.create_release.outputs.upload_url }}
          asset_path: target/release/test-project
          asset_name: test-project
          asset_content_type: application/zip
      - name: Generate full changelog
        uses: orhun/git-cliff-action@v1
        with:
          config: cliff.toml
          args: --verbose
        env:
          OUTPUT: Changelog.md
      - name: Commit changelog file
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Update changelog
          file_pattern: Changelog.md
          branch: main
          push_options: ""
",
  ".gitignore": "# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".
node_modules/
!/.gitattributes
!/.projen/tasks.json
!/.projen/deps.json
!/.projen/files.json
.idea
*.iml
.vscode
.DS_Store
!/Cargo.toml
target
!/scripts/release.sh
!/cliff.toml
!/.github/workflows/rust-release.yml
!/.github/workflows/rust-build.yml
!/.github/workflows/pull-request-lint.yml
",
  ".projen/files.json": {
    "//": "~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".",
    "files": [
      ".gitattributes",
      ".github/workflows/pull-request-lint.yml",
      ".github/workflows/rust-build.yml",
      ".github/workflows/rust-release.yml",
      ".gitignore",
      ".projen/deps.json",
      ".projen/files.json",
      ".projen/tasks.json",
      "Cargo.toml",
      "cliff.toml",
      "scripts/release.sh",
    ],
  },
  ".projen/tasks.json": {
    "//": "~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".",
    "tasks": {
      "compile": {
        "description": "Only compile",
        "name": "compile",
      },
      "default": {
        "description": "Synthesize project files",
        "name": "default",
        "steps": [
          {
            "exec": "node .projenrc.js",
          },
        ],
      },
      "package": {
        "description": "Creates the distribution package",
        "name": "package",
      },
      "post-compile": {
        "description": "Runs after successful compilation",
        "name": "post-compile",
      },
      "pre-compile": {
        "description": "Prepare the project for compilation",
        "name": "pre-compile",
      },
      "test": {
        "description": "Run tests",
        "name": "test",
      },
    },
  },
  "Cargo.toml": "# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

dependencies = { }

[package]
authors = [ "user@mail.com" ]
edition = "2021"
version = "1.0.0"
name = "test-project"
",
  "cliff.toml": "# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

[changelog]
header = """
# Changelog
All notable changes to this project will be documented in this file.

"""
body = """
{% if version %}## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}{% else %}## [unreleased]{% endif %}
{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | upper_first }}
    {% for commit in commits %}
        - {% if commit.breaking %}[**breaking**] {% endif %}{{ commit.message | upper_first }}
    {% endfor %}
{% endfor %}"""
trim = true
footer = """
<!-- generated by git-cliff -->
"""

[git]
conventional_commits = true
filter_unconventional = false
filter_commits = false
tag_pattern = "v[0-9]*"
skip_tags = "v0.1.0-beta.1"
ignore_tags = ""
topo_order = false
sort_commits = "oldest"

  [[git.commit_preprocessors]]
  pattern = "\\\\((\\\\w+\\\\s)?#([0-9]+)\\\\)"
  replace = "([#\${2}](https://github.com/gplassard/test-project/issues/\${2}))"

  [[git.commit_parsers]]
  message = "^feat"
  group = "Features"

  [[git.commit_parsers]]
  message = "^fix"
  group = "Bug Fixes"

  [[git.commit_parsers]]
  message = "^doc"
  group = "Documentation"

  [[git.commit_parsers]]
  message = "^perf"
  group = "Performance"

  [[git.commit_parsers]]
  message = "^refactor"
  group = "Refactor"

  [[git.commit_parsers]]
  message = "^style"
  group = "Styling"

  [[git.commit_parsers]]
  message = "^chore\\\\(release\\\\):"
  skip = true

  [[git.commit_parsers]]
  message = "^chore"
  group = "Miscellaneous Tasks"

  [[git.commit_parsers]]
  message = ".*security"
  group = "Security"

  [[git.commit_parsers]]
  message = "^'?Release"
  skip = true

  [[git.commit_parsers]]
  message = "^Update changelog"
  skip = true

  [[git.commit_parsers]]
  message = ".*"
  group = "Miscellaneous Tasks"
",
  "scripts/release.sh": "#!/usr/bin/env bash
set -ex

if [ -n "$1" ]; then
    yarn install --frozen-lockfile
    # update the version
    yarn version --no-git-tag-version --$1
    yarn projen
    # will update Cargo.lock
    cargo check

    version=$(npm pkg get version | sed -e "s/\\"//g")
    git add -A && git commit -m "chore(release): release v$version"
    # generate a changelog for the tag message
    git tag v$version
else
    echo "warn: please provide a version bump (patch/minor/major)"
    exit 1
fi",
}
`;
